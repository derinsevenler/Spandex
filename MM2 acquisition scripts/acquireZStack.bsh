// Easily acquire and save a z-stack using proper frame averaging
// Use this to save images for later SPANDEX particle detection.


import ij.gui.*; 
import ij.IJ;
import ij.Menus;
import ij.io.*;
import ij.plugin.*;
import ij.*;

// import ij.ImagePlus;
// import ij.ImageStack;
// import ij.ImageProcessor;
import ij.measure.ResultsTable;

// log = mm.getLogManager();
initExp = mmc.getExposure();


// ---------------------------------------------------------------------------------
// GET SETTINGS FROM USER
// ---------------------------------------------------------------------------------

directoryC = new DirectoryChooser("Choose the save directory:");
directoryC.setDefaultDirectory("D:\\User_Scratch");
saveDir = directoryC.getDirectory();

String[] objectiveArray = new String[4]; 
objectiveArray[0]="10x   "; 
objectiveArray[1]="20x   "; 
objectiveArray[2]="40x   "; 
objectiveArray[3]="50x   ";

combiner = new StackCombiner();
ic = new ImageCalculator();
zProjector = new ZProjector();
zProjector.setMethod(0);

GenericDialog gd = new GenericDialog("Acquire and save a Z-stack");

gd.addStringField("Save Directory:",saveDir, 30);
gd.addStringField("Image Name","chip" ,15); 
gd.addMessage("");
gd.addNumericField("Exposure time",initExp, 0);
gd.addNumericField("No. of averaged frames", 16, 0);
curObj = mmc.getConfigGroupState("Objective").getSetting("DObjective","Label").getPropertyValue();
gd.addRadioButtonGroup("Objective",objectiveArray,1,4, curObj + "   "); 
gd.addMessage("(Each objective has default z-stack settings)");
gd.addCheckbox("Use custom z-stack settings", false);
gd.addNumericField("Total stack height (microns)", 8,2);
gd.addNumericField("Step size (microns)", 0.5,2);

gd.showDialog(); 
if (gd.wasCanceled()) 
	return false; 

// Get Inputs
saveDir = gd.getNextString();
saveFname = gd.getNextString();
exposureTime = gd.getNextNumber();
burstFrameNo = gd.getNextNumber() + 1; // Point Grey camera issue: the first frame is always blank.
objLongName = gd.getNextRadioButton();
useCustomSettings = gd.getNextBoolean();

zStackWidthUm = gd.getNextNumber();
zStepUm = gd.getNextNumber();
if ( !useCustomSettings){
	switch (objLongName.substring(0,3)) {
		case "10x":
			zStackWidthUm = 48;
			zStepUm = 3;
			break;
		case "20x":
			zStackWidthUm = 24;
			zStepUm = 1.5;
			break;
		case "40x":
			zStackWidthUm = 8;
			zStepUm = .2;
			break;
		case "50x":
			zStackWidthUm = 8;
			zStepUm = .2;
			break;
	}
}
nZPos = zStackWidthUm/zStepUm;

// ---------------------------------------------------------------------------------
// ACQUIRE Z-STACK
// ---------------------------------------------------------------------------------

mm.setExposure(exposureTime);
mmc.setConfig("Objective",objLongName.substring(0,3));
imWidth = mmc.getImageWidth();
imHeight = mmc.getImageHeight();
bitDepth = mmc.getImageBitDepth();


thisZ = mmc.getPosition();
zStart = thisZ-zStackWidthUm/2;
ImageStack thisZStack = new ImageStack((int)imWidth, (int)imHeight, (int)nZPos);

for (int zidx=0; zidx< nZPos; zidx++) {
	mmc.setPosition(zStart+zidx*zStepUm);
	
	mmc.stopSequenceAcquisition();
	mmc.clearCircularBuffer();
	
	ImageStack burstStack = new ImageStack((int)imWidth, (int) imHeight, (int)burstFrameNo);
	ImagePlus burstImp = new ImagePlus("burst");
	mmc.waitForSystem();
	mmc.prepareSequenceAcquisition(mmc.getCameraDevice());
	mmc.startContinuousSequenceAcquisition(exposureTime/10.0);
	curFrame = 0;
	while ( curFrame < burstFrameNo ){
		if (mmc.getRemainingImageCount() > 0) {
			burstStack.setPixels(mmc.popNextImage(),curFrame+1); //note frame indexing starts at 1
			curFrame++;
		}
		else {
			// Wait for another image to arrive.
			Thread.sleep(5);
		}
	}
	mmc.stopSequenceAcquisition();
	mmc.clearCircularBuffer();

	// Point Grey camera issue: the first frame is always blank.
	burstStack.deleteSlice(1);
	burstImp.setStack(burstStack);

	zProjector.setImage(burstImp);
	zProjector.doProjection();
	thisZStack.setPixels(zProjector.getProjection().getProcessor().getPixels(), zidx+1);

}
mmc.setPosition(thisZ); // move back to the middle position
mmc.waitForSystem();

// ---------------------------------------------------------------------------------
// SAVE Z-STACK
// ---------------------------------------------------------------------------------
imp = new ImagePlus(saveFname,thisZStack);
saveStr = saveDir + saveFname + ".tif";
IJ.saveAsTiff(imp, saveStr);

GenericDialog gd2 = new GenericDialog("Acquire Z Stack");
gd2.addMessage("Acquisition complete!");
gd2.addMessage("Stack saved as " + saveStr);
gd2.showDialog();
if (gd2.wasCanceled())
	return false;